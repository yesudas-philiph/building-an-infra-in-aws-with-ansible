---
- name: "creating infra"
  hosts: localhost
  become: true
  vars_files: myvars
  environment:
    AWS_ACCESS_KEY: "***********"          #aws access key
    AWS_SECRET_KEY: "********************" #aws secret key
    AWS_REGION: "*******"                  #aws region 
  tasks:
    
#creating keypair

    - name: "creating ssh-Key pair"
      amazon.aws.ec2_key:
        name: "{{project}}"
        state: present
        tags:
          Name: "{{ project }}"
          project: "{{ project }}"
        
      register: keypair

        
        
    - name: "saving priv_key"
      when: keypair.changed == true 
      copy:
        content: "{{ keypair.key.private_key}}"
        dest: "{{ project }}.pem"
        mode: 0400

#creating security groups
            
    - name: "security grp"
      amazon.aws.ec2_group:
        name: "{{ project }}-webserver"
        description: "webserver"
        
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
                    
                
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        tags:
          Name: "{{ project }}-webserver"
          project: "{{ project }}"
      register: webserver 


    - name:  "ssh access"
      amazon.aws.ec2_group:
        name: "{{ project }}-ssh"
        description: "ssh for all"

        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0

        tags:
          Name: "{{ project }}-ssh"
          project: "{{ project }}"
      register: ssh

# creating EC2 instances

    - name:  "creating webserver" 
      amazon.aws.ec2:
        key_name: "{{ keypair.key.name}}"
        instance_type: "{{ instance_type }}"
        image: "{{ ami_id }}"
        wait: yes
        group_id:
          - "{{ webserver.group_id }}"
          - "{{ ssh.group_id }}"
        instance_tags:
          Name: "{{ project }}-webserver"
          project: "{{ project }}"
        count_tag:
          Name: "{{ project }}-webserver"
        exact_count: "{{ count }}"
      register: ec2
        
    - name: "public IP of newly created instances"
      debug:
        msg: "Public IP  {{ item.public_ip }}"
      with_items: 
        - "{{ ec2.tagged_instances }}"
        
#setting up dynamic inventory        
    
    - name: "setting up dynamic inventory"
      add_host:
        name: "{{ item.public_ip }}"
        groups: "amazon"
        ansible_host: "{{ item.public_ip }}"
        ansible_port: 22
        ansible_user: "ec2-user"
        ansible_ssh_private_key_file: "{{ project }}.pem"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      with_items:
        - "{{ ec2.tagged_instances }}"
      register: out



    - name: "waiting for instances to be ready"
      when: ec2.changed == true
      wait_for:
        timeout: 150

# provisioning the created EC2 instances


- name: "provisioning"
  hosts: amazon
  become: true
  tasks:
    
    - name: "installing apache webserver"
      yum:
        name: httpd
        state: present
            
    - name: "setting up a test site"
      copy:
        content: "<center><h1>{{ ansible_fqdn }}</h1></center> \n <center><h2>{{ ansible_hostname }}</h2></center>"
        dest: /var/www/html/index.html
            
    - name: "restarting and enabling apache"
      service:
        name: httpd
        state: restarted
        enabled: true

# displaying URLs for the test sites            
            
    - name: "url for the sites"
      run_once: true
      debug:
        msg: "http://{{item}}"
      with_items:
        - "{{ groups.amazon }}"

